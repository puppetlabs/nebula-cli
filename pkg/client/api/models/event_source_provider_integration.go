// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EventSourceProviderIntegration An event source provided by an integration
// swagger:model EventSourceProviderIntegration
type EventSourceProviderIntegration struct {

	// integration
	// Required: true
	Integration *IntegrationSummary `json:"integration"`

	// type
	// Required: true
	// Enum: [integration]
	Type *string `json:"type"`
}

// Validate validates this event source provider integration
func (m *EventSourceProviderIntegration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIntegration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EventSourceProviderIntegration) validateIntegration(formats strfmt.Registry) error {

	if err := validate.Required("integration", "body", m.Integration); err != nil {
		return err
	}

	if m.Integration != nil {
		if err := m.Integration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("integration")
			}
			return err
		}
	}

	return nil
}

var eventSourceProviderIntegrationTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["integration"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eventSourceProviderIntegrationTypeTypePropEnum = append(eventSourceProviderIntegrationTypeTypePropEnum, v)
	}
}

const (

	// EventSourceProviderIntegrationTypeIntegration captures enum value "integration"
	EventSourceProviderIntegrationTypeIntegration string = "integration"
)

// prop value enum
func (m *EventSourceProviderIntegration) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, eventSourceProviderIntegrationTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EventSourceProviderIntegration) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EventSourceProviderIntegration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EventSourceProviderIntegration) UnmarshalBinary(b []byte) error {
	var res EventSourceProviderIntegration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
