// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// WorkflowRunCreatedByTriggerSummary A summary of the trigger that created a workflow run
// swagger:model WorkflowRunCreatedByTriggerSummary
type WorkflowRunCreatedByTriggerSummary struct {

	// event
	Event *Event `json:"event,omitempty"`

	// trigger
	Trigger *WorkflowTriggerSummary `json:"trigger,omitempty"`

	// The type of creator
	// Enum: [trigger]
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this workflow run created by trigger summary
func (m *WorkflowRunCreatedByTriggerSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEvent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrigger(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkflowRunCreatedByTriggerSummary) validateEvent(formats strfmt.Registry) error {

	if swag.IsZero(m.Event) { // not required
		return nil
	}

	if m.Event != nil {
		if err := m.Event.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("event")
			}
			return err
		}
	}

	return nil
}

func (m *WorkflowRunCreatedByTriggerSummary) validateTrigger(formats strfmt.Registry) error {

	if swag.IsZero(m.Trigger) { // not required
		return nil
	}

	if m.Trigger != nil {
		if err := m.Trigger.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("trigger")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkflowRunCreatedByTriggerSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkflowRunCreatedByTriggerSummary) UnmarshalBinary(b []byte) error {
	var res WorkflowRunCreatedByTriggerSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
