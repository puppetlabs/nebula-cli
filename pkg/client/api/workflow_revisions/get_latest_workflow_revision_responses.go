// Code generated by go-swagger; DO NOT EDIT.

package workflow_revisions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/puppetlabs/nebula-cli/pkg/client/api/models"
)

// GetLatestWorkflowRevisionReader is a Reader for the GetLatestWorkflowRevision structure.
type GetLatestWorkflowRevisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLatestWorkflowRevisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLatestWorkflowRevisionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLatestWorkflowRevisionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLatestWorkflowRevisionOK creates a GetLatestWorkflowRevisionOK with default headers values
func NewGetLatestWorkflowRevisionOK() *GetLatestWorkflowRevisionOK {
	return &GetLatestWorkflowRevisionOK{}
}

/*GetLatestWorkflowRevisionOK handles this case with default header values.

The retrieved workflow revision
*/
type GetLatestWorkflowRevisionOK struct {
	Payload *GetLatestWorkflowRevisionOKBody
}

func (o *GetLatestWorkflowRevisionOK) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflowName}/revisions/latest][%d] getLatestWorkflowRevisionOK  %+v", 200, o.Payload)
}

func (o *GetLatestWorkflowRevisionOK) GetPayload() *GetLatestWorkflowRevisionOKBody {
	return o.Payload
}

func (o *GetLatestWorkflowRevisionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetLatestWorkflowRevisionOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestWorkflowRevisionDefault creates a GetLatestWorkflowRevisionDefault with default headers values
func NewGetLatestWorkflowRevisionDefault(code int) *GetLatestWorkflowRevisionDefault {
	return &GetLatestWorkflowRevisionDefault{
		_statusCode: code,
	}
}

/*GetLatestWorkflowRevisionDefault handles this case with default header values.

An error occurred
*/
type GetLatestWorkflowRevisionDefault struct {
	_statusCode int

	Payload *GetLatestWorkflowRevisionDefaultBody
}

// Code gets the status code for the get latest workflow revision default response
func (o *GetLatestWorkflowRevisionDefault) Code() int {
	return o._statusCode
}

func (o *GetLatestWorkflowRevisionDefault) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflowName}/revisions/latest][%d] getLatestWorkflowRevision default  %+v", o._statusCode, o.Payload)
}

func (o *GetLatestWorkflowRevisionDefault) GetPayload() *GetLatestWorkflowRevisionDefaultBody {
	return o.Payload
}

func (o *GetLatestWorkflowRevisionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetLatestWorkflowRevisionDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetLatestWorkflowRevisionDefaultBody Error response
swagger:model GetLatestWorkflowRevisionDefaultBody
*/
type GetLatestWorkflowRevisionDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this get latest workflow revision default body
func (o *GetLatestWorkflowRevisionDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLatestWorkflowRevisionDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getLatestWorkflowRevision default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLatestWorkflowRevisionDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLatestWorkflowRevisionDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetLatestWorkflowRevisionDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetLatestWorkflowRevisionOKBody get latest workflow revision o k body
swagger:model GetLatestWorkflowRevisionOKBody
*/
type GetLatestWorkflowRevisionOKBody struct {
	models.Entity

	// revision
	Revision *models.WorkflowRevision `json:"revision,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetLatestWorkflowRevisionOKBody) UnmarshalJSON(raw []byte) error {
	// GetLatestWorkflowRevisionOKBodyAO0
	var getLatestWorkflowRevisionOKBodyAO0 models.Entity
	if err := swag.ReadJSON(raw, &getLatestWorkflowRevisionOKBodyAO0); err != nil {
		return err
	}
	o.Entity = getLatestWorkflowRevisionOKBodyAO0

	// GetLatestWorkflowRevisionOKBodyAO1
	var dataGetLatestWorkflowRevisionOKBodyAO1 struct {
		Revision *models.WorkflowRevision `json:"revision,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetLatestWorkflowRevisionOKBodyAO1); err != nil {
		return err
	}

	o.Revision = dataGetLatestWorkflowRevisionOKBodyAO1.Revision

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetLatestWorkflowRevisionOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getLatestWorkflowRevisionOKBodyAO0, err := swag.WriteJSON(o.Entity)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getLatestWorkflowRevisionOKBodyAO0)

	var dataGetLatestWorkflowRevisionOKBodyAO1 struct {
		Revision *models.WorkflowRevision `json:"revision,omitempty"`
	}

	dataGetLatestWorkflowRevisionOKBodyAO1.Revision = o.Revision

	jsonDataGetLatestWorkflowRevisionOKBodyAO1, errGetLatestWorkflowRevisionOKBodyAO1 := swag.WriteJSON(dataGetLatestWorkflowRevisionOKBodyAO1)
	if errGetLatestWorkflowRevisionOKBodyAO1 != nil {
		return nil, errGetLatestWorkflowRevisionOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetLatestWorkflowRevisionOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get latest workflow revision o k body
func (o *GetLatestWorkflowRevisionOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Entity
	if err := o.Entity.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRevision(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLatestWorkflowRevisionOKBody) validateRevision(formats strfmt.Registry) error {

	if swag.IsZero(o.Revision) { // not required
		return nil
	}

	if o.Revision != nil {
		if err := o.Revision.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getLatestWorkflowRevisionOK" + "." + "revision")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLatestWorkflowRevisionOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLatestWorkflowRevisionOKBody) UnmarshalBinary(b []byte) error {
	var res GetLatestWorkflowRevisionOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
