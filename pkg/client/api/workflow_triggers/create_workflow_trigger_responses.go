// Code generated by go-swagger; DO NOT EDIT.

package workflow_triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/puppetlabs/nebula-cli/pkg/client/api/models"
)

// CreateWorkflowTriggerReader is a Reader for the CreateWorkflowTrigger structure.
type CreateWorkflowTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateWorkflowTriggerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateWorkflowTriggerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateWorkflowTriggerCreated creates a CreateWorkflowTriggerCreated with default headers values
func NewCreateWorkflowTriggerCreated() *CreateWorkflowTriggerCreated {
	return &CreateWorkflowTriggerCreated{}
}

/*CreateWorkflowTriggerCreated handles this case with default header values.

A newly created workflow trigger
*/
type CreateWorkflowTriggerCreated struct {
	Payload *CreateWorkflowTriggerCreatedBody
}

func (o *CreateWorkflowTriggerCreated) Error() string {
	return fmt.Sprintf("[POST /api/workflows/{workflowName}/triggers][%d] createWorkflowTriggerCreated  %+v", 201, o.Payload)
}

func (o *CreateWorkflowTriggerCreated) GetPayload() *CreateWorkflowTriggerCreatedBody {
	return o.Payload
}

func (o *CreateWorkflowTriggerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateWorkflowTriggerCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowTriggerDefault creates a CreateWorkflowTriggerDefault with default headers values
func NewCreateWorkflowTriggerDefault(code int) *CreateWorkflowTriggerDefault {
	return &CreateWorkflowTriggerDefault{
		_statusCode: code,
	}
}

/*CreateWorkflowTriggerDefault handles this case with default header values.

An error occurred
*/
type CreateWorkflowTriggerDefault struct {
	_statusCode int

	Payload *CreateWorkflowTriggerDefaultBody
}

// Code gets the status code for the create workflow trigger default response
func (o *CreateWorkflowTriggerDefault) Code() int {
	return o._statusCode
}

func (o *CreateWorkflowTriggerDefault) Error() string {
	return fmt.Sprintf("[POST /api/workflows/{workflowName}/triggers][%d] createWorkflowTrigger default  %+v", o._statusCode, o.Payload)
}

func (o *CreateWorkflowTriggerDefault) GetPayload() *CreateWorkflowTriggerDefaultBody {
	return o.Payload
}

func (o *CreateWorkflowTriggerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateWorkflowTriggerDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateWorkflowTriggerBody The request type for creating a workflow trigger
swagger:model CreateWorkflowTriggerBody
*/
type CreateWorkflowTriggerBody struct {

	// binding
	Binding *models.WorkflowTriggerBinding `json:"binding,omitempty"`

	// event source
	EventSource *models.EventSourceIdentifier `json:"event_source,omitempty"`

	// settings
	Settings models.WorkflowTriggerSettings `json:"settings,omitempty"`
}

// Validate validates this create workflow trigger body
func (o *CreateWorkflowTriggerBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBinding(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEventSource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateWorkflowTriggerBody) validateBinding(formats strfmt.Registry) error {

	if swag.IsZero(o.Binding) { // not required
		return nil
	}

	if o.Binding != nil {
		if err := o.Binding.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "binding")
			}
			return err
		}
	}

	return nil
}

func (o *CreateWorkflowTriggerBody) validateEventSource(formats strfmt.Registry) error {

	if swag.IsZero(o.EventSource) { // not required
		return nil
	}

	if o.EventSource != nil {
		if err := o.EventSource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "event_source")
			}
			return err
		}
	}

	return nil
}

func (o *CreateWorkflowTriggerBody) validateSettings(formats strfmt.Registry) error {

	if swag.IsZero(o.Settings) { // not required
		return nil
	}

	if err := o.Settings.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "settings")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowTriggerBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowTriggerBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowTriggerBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateWorkflowTriggerCreatedBody The response type for the new trigger
swagger:model CreateWorkflowTriggerCreatedBody
*/
type CreateWorkflowTriggerCreatedBody struct {

	// trigger
	Trigger *models.WorkflowTrigger `json:"trigger,omitempty"`
}

// Validate validates this create workflow trigger created body
func (o *CreateWorkflowTriggerCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTrigger(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateWorkflowTriggerCreatedBody) validateTrigger(formats strfmt.Registry) error {

	if swag.IsZero(o.Trigger) { // not required
		return nil
	}

	if o.Trigger != nil {
		if err := o.Trigger.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createWorkflowTriggerCreated" + "." + "trigger")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowTriggerCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowTriggerCreatedBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowTriggerCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateWorkflowTriggerDefaultBody Error response
swagger:model CreateWorkflowTriggerDefaultBody
*/
type CreateWorkflowTriggerDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this create workflow trigger default body
func (o *CreateWorkflowTriggerDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateWorkflowTriggerDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createWorkflowTrigger default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowTriggerDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowTriggerDefaultBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowTriggerDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
